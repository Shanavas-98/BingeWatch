/* eslint-disable max-len */
import { userInstance } from '../axios/axiosInstance';

export const userLogin = (values) => userInstance.post('/login', { ...values });
export const userSignup = (values) => userInstance.post('/register', { ...values });
export const sendOtp = (mobile) => userInstance.post('/resend-otp', { mobile });
export const verifyOtp = (otp, mobile) => userInstance.post('/verify-otp', { otp, mobile });
export const sendVerifyEmail = (email) => userInstance.post('/resend-link', { email });
export const verifyEmail = (token) => userInstance.get(`/verify-email/${token}`);
export const setNewPassword = (values) => userInstance.post('/forgot', { ...values });
// export const isUserBlocked = () => userInstance.get('/is-blocked');
export const userAuth = () => userInstance.get('/auth-user');

export const searchContents = (search, release, pageNo) => userInstance.get(`/search?query=${search}&year=${release}&page=${pageNo}`);
export const fetchRandomGenres = () => userInstance.get('/genres');
export const fetchGenreMovies = (genreId) => userInstance.get(`/movies/${genreId}`);
export const fetchMovie = (movieId) => userInstance.get(`/movie/${movieId}`);
export const addRating = (value, movieId) => userInstance.get(`/add-rating/${movieId}?rating=${value}`);
export const addToWatchlist = (contentId, type) => userInstance.get(`/add-watchlist/${contentId}?type=${type}`);
export const fetchReview = (movieId) => userInstance.get(`/movie/get-review/${movieId}`);
export const addReview = (contentId, review) => userInstance.post(`/add-review/${contentId}`, { review });
export const fetchActor = (actorId) => userInstance.get(`/actor/${actorId}`);
export const fetchCrew = (crewId) => userInstance.get(`/crew/${crewId}`);
export const fetchAllReviews = (contentId) => userInstance.get(`/reviews/${contentId}`);
export const fetchRelatedMovies = (movieId) => userInstance.get(`/related-movies/${movieId}`);
export const fetchGenreSeries = (genreId) => userInstance.get(`/series/${genreId}`);
export const fetchSeries = (showId) => userInstance.get(`/show/${showId}`);
export const fetchSeason = (seasonId) => userInstance.get(`/season/${seasonId}`);
export const fetchEpisode = (episodeId) => userInstance.get(`/episode/${episodeId}`);
export const fetchWatchlist = () => userInstance.get('/watchlist');
export const getUserDetails = () => userInstance.get('/profile');
export const updateName = (name) => userInstance.patch('/update-name', { name });
export const updateEmail = (email) => userInstance.patch('/update-email', { email });
export const updateMobile = (mobile) => userInstance.patch('/update-mobile', { mobile });
export const updatePicture = (formData) => userInstance.patch('/update-picture', formData, { headers: { 'Content-Type': 'multipart/form-data' } });
// export const getFriend = (friendId) => userInstance.get(`/users?userId=${friendId}`);
export const friendRequest = (friendId) => userInstance.post(`/add-friend/${friendId}`);
export const fetchRequests = () => userInstance.get('/friend-requests');
export const deleteReq = (reqId) => userInstance.put(`/friend-requests/cancel/${reqId}`);
export const acceptReq = (reqId) => userInstance.patch(`/friend-requests/accept/${reqId}`);
export const rejectReq = (reqId) => userInstance.patch(`/friend-requests/reject/${reqId}`);
export const deleteFriend = (friendId) => userInstance.patch(`/unfriend/${friendId}`);

export const fetchFriends = (query) => userInstance.get(`/friends?search=${query}`);
export const getChats = () => userInstance.get('/chat');
export const newChat = (friendId) => userInstance.post('/chat', { friendId });
export const newGroupChat = (obj) => userInstance.post('/chat/group', { ...obj });
export const chatRename = (obj) => userInstance.put('/chat/rename', { ...obj });
export const addToGroup = (obj) => userInstance.put('/chat/add', { ...obj });
export const removeFromGroup = (obj) => userInstance.put('/chat/remove', { ...obj });
export const chatMessages = (chatId) => userInstance.get(`/message/${chatId}`);
export const sendMsg = (obj) => userInstance.post('/message', { ...obj });
